{"version":3,"sources":["components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","prev","props","images","step","itemWidth","frameSize","infinite","prevPosition","maxPosition","length","setState","next","nextPosition","this","animationDuration","className","style","width","transition","transform","map","image","index","height","src","alt","String","type","onClick","disabled","Component","App","changeItemWidth","event","currentTarget","value","changeFrameSide","changeStep","changeAnimationDuration","changeInfinite","prevState","htmlFor","id","defaultValue","min","max","onChange","defaultChecked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7184d5f1.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  position: number,\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  prev = () => {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const prevPosition = position - itemWidth * step;\n    const maxPosition = images.length * itemWidth - itemWidth * frameSize;\n\n    if (prevPosition < 0) {\n      if (infinite) {\n        this.setState({ position: maxPosition });\n\n        return;\n      }\n\n      this.setState({ position: 0 });\n    } else {\n      this.setState({ position: prevPosition });\n    }\n  };\n\n  next = () => {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const nextPosition = position + itemWidth * step;\n    const maxPosition = images.length * itemWidth - itemWidth * frameSize;\n\n    if (nextPosition >= maxPosition) {\n      if (infinite && position === maxPosition) {\n        this.setState({ position: 0 });\n\n        return;\n      }\n\n      this.setState({ position: maxPosition });\n    } else {\n      this.setState({ position: nextPosition });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const maxPosition = images.length * itemWidth - itemWidth * frameSize;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: itemWidth * frameSize }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transition: `${animationDuration}ms`,\n            transform: `translateX(-${position}px)`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                width={itemWidth}\n                height={itemWidth}\n                src={image}\n                alt={String(index + 1)}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          className=\"Carousel__arrow Carousel__arrow--left\"\n          type=\"button\"\n          onClick={this.prev}\n          disabled={!infinite && position === 0}\n        >\n          Prev\n        </button>\n        <button\n          className=\"Carousel__arrow Carousel__arrow--right\"\n          type=\"button\"\n          onClick={this.next}\n          disabled={!infinite && position === maxPosition}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean\n}\n\nclass App extends Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.currentTarget.value });\n  };\n\n  changeFrameSide = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.currentTarget.value });\n  };\n\n  changeStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.currentTarget.value });\n  };\n\n  changeAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.currentTarget.value });\n  };\n\n  changeInfinite = () => {\n    this.setState(prevState => (\n      { infinite: !prevState.infinite }\n    ));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"generator\">\n          <div className=\"generator-field\">\n            <label\n              htmlFor=\"itemId\"\n              className=\"generator-field__name\"\n            >\n              Item width:\n            </label>\n            <output>{itemWidth}</output>\n            <input\n              id=\"itemId\"\n              className=\"generator-field__input\"\n              defaultValue={itemWidth}\n              type=\"range\"\n              min={50}\n              max={300}\n              step={10}\n              onChange={this.changeItemWidth}\n            />\n          </div>\n          <div className=\"generator-field\">\n            <label\n              htmlFor=\"frameId\"\n              className=\"generator-field__name\"\n            >\n              Frame size:\n            </label>\n            <output>{frameSize}</output>\n            <input\n              className=\"generator-field__input\"\n              defaultValue={frameSize}\n              type=\"range\"\n              min={1}\n              max={5}\n              onChange={this.changeFrameSide}\n              id=\"frameId\"\n            />\n          </div>\n          <div className=\"generator-field\">\n            <label\n              htmlFor=\"stepId\"\n              className=\"generator-field__name\"\n            >\n              Step:\n            </label>\n            <output>{step}</output>\n            <input\n              className=\"generator-field__input\"\n              defaultValue={step}\n              type=\"range\"\n              min={1}\n              max={5}\n              onChange={this.changeStep}\n              id=\"stepId\"\n            />\n          </div>\n          <div className=\"generator-field\">\n            <label\n              htmlFor=\"durationId\"\n              className=\"generator-field__name\"\n            >\n              Animation duration:\n            </label>\n            <output>{animationDuration}</output>\n            <input\n              className=\"generator-field__input\"\n              defaultValue={animationDuration}\n              type=\"range\"\n              min={500}\n              max={3000}\n              step={500}\n              onChange={this.changeAnimationDuration}\n              id=\"durationId\"\n            />\n          </div>\n          <div className=\"generator-field\">\n            <label\n              htmlFor=\"infiniteId\"\n              className=\"generator-field__name\"\n            >\n              Infinite:\n            </label>\n            <input\n              className=\"generator-field__input\"\n              defaultChecked={infinite}\n              onChange={this.changeInfinite}\n              type=\"checkbox\"\n              id=\"infiniteId\"\n            />\n          </div>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}